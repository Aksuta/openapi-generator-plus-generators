package {{apiPackage}};

{{>frag/imports}}
/**
 * API client interface with high-level return types and exceptions. The implementation of this interface invokes the JAX-RS API client.
 * {{{md description}}}
 */
{{>generatedAnnotation}}
public interface {{className name}}Api extends {{apiPackage}}.ApiInvoker {

	{{#each operations}}
	{{#or summary description}}
	/**
	{{#if summary}}
	 * {{summary}}
	{{/if}}
	{{#if description}}
	 * {{{md description}}}
	{{/if}}
	 */
	{{/or}}
	{{#if deprecated}}
	@java.lang.Deprecated
	{{/if}}
	{{#if returnNativeType}}{{{returnNativeType}}}{{else}}void{{/if}} {{identifier name}}({{#each parameters}}{{>serviceQueryParams}}{{>servicePathParams}}{{>serviceHeaderParams}}{{>serviceFormParams}}{{#hasMore}}, {{/hasMore}}{{/each}}{{#if requestBody}}{{#if parameters}}, {{/if}}{{>bodyParam}}{{/if}}){{#each (nonDefaultResponses)}}{{#if @first}} throws{{else}},{{/if}} {{{className ../name}}}{{{code}}}Exception{{/each}};
	{{/each}}

	{{#each operations}}
	{{#each (nonDefaultResponses)}}
	public static class {{{className ../name}}}{{{code}}}Exception extends Exception {

		private static final long serialVersionUID = 1L;
		
		{{#unless nativeType}}
		public {{{className ../name}}}{{{code}}}Exception() {
			
		}
		{{else}}
		private {{{nativeType}}} entity;
		
		public {{{className ../name}}}{{{code}}}Exception({{{nativeType}}} entity) {
			this.entity = entity;
		}
		
		public {{{nativeType}}} getEntity() {
			return this.entity;
		}
		{{/unless}}

	}

	{{/each}}
	{{/each}}
}
