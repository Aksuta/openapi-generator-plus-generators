package {{apiServiceImplPackage}};

import org.apache.cxf.jaxrs.ext.multipart.Attachment;

{{#imports}}import {{.}};
{{/imports}}

import java.util.List;

import java.io.InputStream;

import javax.enterprise.context.RequestScoped;
import javax.ws.rs.core.Response;
import javax.ws.rs.core.Response.ResponseBuilder;

// @RequestScoped // This annotation is commented out, which makes the service a Singleton. There seems to be a bug that causes the securityContext to be lost if the service is RequestScoped
{{>generatedAnnotation}}
public class {{className name}}ApiServiceImpl implements {{@root/apiPackage}}.{{className name}}ApiService {

{{#operation}}
{{^vendorExtensions.x-implementation-provided}}
	@Override
	public {{#if returnNativeType}}{{{returnNativeType}}}{{else}}void{{/if}} {{identifier name}}({{#allParams}}{{>serviceQueryParams}}{{>servicePathParams}}{{>serviceHeaderParams}}{{>serviceBodyParams}}{{>serviceFormParams}}, {{/allParams}}ResponseBuilder response) throws RuntimeException{{#responses}}{{^isDefault}}, {{{className ../name}}}{{{code}}}Exception{{/isDefault}}{{/responses}} {
		{{#if returnNativeType}}return null;{{/if}}
	}
	
{{/vendorExtensions.x-implementation-provided}}
{{/operation}}
}
