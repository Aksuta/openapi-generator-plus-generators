{{>nestedModels}}

{{#vars}}
private {{{nativeType}}} {{identifier name}} = {{{defaultValue}}};
private boolean __patched{{capitalize (identifier name)}} = false;
{{/vars}}

{{#vars}}
/**
 {{#if description}}
 * {{description}}
 {{/if}}
 {{#if minimum}}
 * minimum: {{minimum}}
 {{/if}}
 {{#if maximum}}
 * maximum: {{maximum}}
 {{/if}}
 */
public {{className ../name}} {{identifier name}}({{{nativeType}}} {{identifier name}}) {
	set{{capitalize (identifier name)}}({{identifier name}});
	return this;
}

{{#if vendorExtensions.extraAnnotation}}
{{{vendorExtensions.extraAnnotation}}}
{{/if}}
@ApiModelProperty({{#example}}example = "{{{example}}}", {{/example}}{{#required}}required = {{required}}, {{/required}}value = "{{{description}}}")
@com.fasterxml.jackson.annotation.JsonProperty("{{name}}")
{{#if @root.useBeanValidation}}
{{>beanValidation}}
{{/if}}
public {{{nativeType}}} {{#isBoolean}}is{{else}}get{{/isBoolean}}{{capitalize (identifier name)}}() {
	return this.{{identifier name}};
}
public void set{{capitalize (identifier name)}}({{{nativeType}}} {{identifier name}}) {
	this.{{identifier name}} = {{identifier name}};
	this.__patched{{capitalize (identifier name)}} = true;
}
public boolean patched{{capitalize (identifier name)}}() {
	return this.__patched{{capitalize (identifier name)}};
}

{{/vars}}

@Override
public boolean equals(java.lang.Object o) {
	if (this == o) {
		return true;
	}
	if (o == null || getClass() != o.getClass()) {
		return false;
	}
	{{#if parent}}
	if (!super.equals(o)) {
		return false;
	}
	{{/if}}
	{{#if vars}}
	{{className name}} {{identifier name}} = ({{className name}}) o;
	return {{#vars}}Objects.equals(this.{{identifier name}}, {{identifier ../name}}.{{identifier name}}){{#hasMore}} &&
			{{/hasMore}}{{/vars}};
	{{else}}
	return true;
	{{/if}}
}

@Override
public int hashCode() {
	return {{#if parent}}31 * super.hashCode() + {{/if}}Objects.hash({{#vars}}this.{{identifier name}}{{#hasMore}}, {{/hasMore}}{{/vars}});
}

@Override
public String toString() {
	StringBuilder sb = new StringBuilder();
	sb.append("class {{className name}} {\n");
	{{#parent}}sb.append("    ").append(toIndentedString(super.toString())).append("\n");{{/parent}}
	{{#vars}}sb.append("    {{identifier name}}: ").append(toIndentedString(this.{{identifier name}})).append("\n");
	{{/vars}}sb.append("}");
	return sb.toString();
}

/**
 * Convert the given object to string with each line indented by 4 spaces
 * (except the first line).
 */
private String toIndentedString(java.lang.Object o) {
	if (o == null) {
		return "null";
	}
	return o.toString().replace("\n", "\n    ");
}
