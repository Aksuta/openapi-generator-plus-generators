package {{invokerImplPackage}};

{{>generatedAnnotation}}
@javax.enterprise.context.ApplicationScoped
public class DefaultClientApi implements {{invokerPackage}}.ClientApi {

	@javax.inject.Inject
	private {{invokerPackage}}.ClientApiProviders providers;

	{{#each apis}}
	private volatile {{@root.apiPackage}}.{{className name}}Api {{identifier name}}Api;
	{{/each}}

	{{#each apis}}
	@java.lang.Override
	public {{@root.apiPackage}}.{{className name}}Api get{{className name}}Api() {
		if ({{identifier name}}Api == null) {
			synchronized (this) {
				if ({{identifier name}}Api == null) {
					{{identifier name}}Api = new{{className name}}Api();
				}
			}
		}
		return {{identifier name}}Api;
	}

	@java.lang.Override
	public {{@root.apiPackage}}.{{className name}}Api new{{className name}}Api() {
		{{@root.apiPackage}}.{{className name}}Api api = org.apache.cxf.jaxrs.client.JAXRSClientFactory.create({{{stringLiteral @root.server.url}}}, {{@root.apiPackage}}.{{className name}}Api.class, providers.createProviders());
		return api;
	}

	{{/each}}
}
