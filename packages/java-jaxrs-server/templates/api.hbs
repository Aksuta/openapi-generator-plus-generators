package {{apiPackage}};

{{#imports}}import {{.}};
{{/imports}}

@javax.ws.rs.Path("{{{path}}}")
@io.swagger.annotations.Api(description = "the {{{name}}} API")
{{#if consumes}}
@javax.ws.rs.Consumes({ {{#consumes}}"{{{.}}}"{{#unless @last}}, {{/unless}}{{/consumes}} })
{{/if}}
{{#if produces}}
@javax.ws.rs.Produces({ {{#produces}}"{{{.}}}"{{#unless @last}}, {{/unless}}{{/produces}} })
{{/if}}
{{>generatedAnnotation}}
@java.lang.SuppressWarnings("all")
public interface {{className name}}Api {

{{#operations}}
	{{>nestedModels}}
	@javax.ws.rs.{{httpMethod}}
	{{#if securityRequirements}}
	{{#if @root.authenticatedOperationAnnotation}}
	{{@root.authenticatedOperationAnnotation}}
	{{/if}}
	{{/if}}
	{{#if deprecated}}
	@java.lang.Deprecated
	{{/if}}
	{{#if path}}
	@javax.ws.rs.Path("{{{path}}}")
	{{/if}}
	{{#if consumes}}
	@javax.ws.rs.Consumes({ {{#consumes}}"{{{mediaType}}}"{{#hasMore}}, {{/hasMore}}{{/consumes}} })
	{{/if}}
	{{#if produces}}
	@javax.ws.rs.Produces({ {{#produces}}"{{{mediaType}}}"{{#hasMore}}, {{/hasMore}}{{/produces}} })
	{{/if}}
	@io.swagger.annotations.ApiOperation(value = {{#if summary}}{{{stringLiteral summary}}}{{else}}""{{/if}}{{#if notes}}, notes = {{{stringLiteral notes}}}{{/if}}{{#if returnNativeType}}, response = {{{returnNativeType.literalType}}}.class{{/if}}{{#returnContainer}}, responseContainer = "{{{returnContainer}}}"{{/returnContainer}}{{#if securityRequirements}}, authorizations = {
		{{#securityRequirements}}
		@io.swagger.annotations.Authorization(value = "{{scheme.name}}"{{#scheme.isOAuth}}, scopes = {
			{{#scopes}}
			@io.swagger.annotations.AuthorizationScope(scope = "{{name}}", description = "{{description}}"){{#hasMore}},{{/hasMore}}
			{{/scopes}}
		}{{/scheme.isOAuth}}){{#hasMore}},{{/hasMore}}
		{{/securityRequirements}}
	}{{/if}}, tags={ {{#tags}}"{{{.}}}"{{#hasMore}}, {{/hasMore}}{{/tags}} })
	@io.swagger.annotations.ApiResponses(value = {
		{{#responses}}
		@io.swagger.annotations.ApiResponse(code = {{{code}}}, message = "{{{description}}}", response = {{#if nativeType}}{{{nativeType.literalType}}}{{else}}Void{{/if}}.class{{#if containerType}}, responseContainer = "{{{containerType}}}"{{/if}}){{#hasMore}},{{/hasMore}}
		{{/responses}}
	})
	public javax.ws.rs.core.Response {{name}}({{#allParams}}{{>queryParams}}{{>pathParams}}{{>headerParams}}{{>bodyParams}}{{>formParams}}{{#hasMore}}, {{/hasMore}}{{/allParams}});

{{/operations}}
}
