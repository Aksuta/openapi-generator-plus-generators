package {{apiPackage}};

{{>frag/imports}}
{{>generatedAnnotation}}
@java.lang.SuppressWarnings("all")
public interface {{className name}}ApiService {
	{{#each operations}}
	public {{#if returnNativeType}}{{{returnNativeType}}}{{else}}void{{/if}} {{identifier name}}({{#each parameters}}{{>serviceQueryParams}}{{>servicePathParams}}{{>serviceHeaderParams}}{{>serviceFormParams}}{{#hasMore}}, {{/hasMore}}{{/each}}{{#if requestBody}}{{#if parameters}}, {{/if}}{{>serviceBodyParam}}{{/if}}{{#unless returnNativeType}}{{#or parameters requestBody}}, {{/or}}javax.ws.rs.core.Response.ResponseBuilder response{{/unless}}) throws RuntimeException{{#each responses}}{{^isDefault}}, {{{className ../name}}}{{{code}}}Exception{{/isDefault}}{{/each}};
	{{/each}}
	
	{{#each operations}}
	{{#each responses}}
	{{^isDefault}}
	public static class {{{className ../name}}}{{{code}}}Exception extends Exception {
		{{#unless nativeType}}
		public {{{className ../name}}}{{{code}}}Exception() {
			
		}
		{{else}}
		private {{{nativeType}}} entity;
		
		public {{{className ../name}}}{{{code}}}Exception({{{nativeType}}} entity) {
			this.entity = entity;
		}
		
		public {{{nativeType}}} getEntity() {
			return this.entity;
		}
		{{/unless}}

		{{>hooks/apiServiceException operation=..}}
	}

	{{/isDefault}}
	{{/each}}
	{{/each}}
}
